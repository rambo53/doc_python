//////////////////////////////////// TABLE ASSOC ////////////////////////////////////

Ici on unie Entry avec Tag via entry_tags. 

//////////////////////////

entry_tags = db.Table('entry_tags',
    db.Column('tag_id', db.Integer, db.ForeignKey('tag.id')),
    db.Column('entry_id', db.Integer, db.ForeignKey('entry.id'))		**entry_tags est ma table d'association**
)

class Entry(db.Model):
    
    id = db.Column(db.Integer, primary_key=True)
    title =  db.Column(db.String(100))
    body = db.Column(db.Text)
    tags = db.relationship('Tag', secondary=entry_tags, backref=db.backref('entries', lazy='dynamic'))

    #constructeur
    def __init__(self, *args, **kwargs):
        super(Entry, self).__init__(*args, **kwargs)

    def __repr__(self):
        return '<Entry : %s>' %self.title


#diff√©rente classe     

class Tag(db.Model):
    
    id = db.Column(db.Integer, primary_key=True)
    name =  db.Column(db.String(100))

    #constructeur
    def __init__(self, *args, **kwargs):
        super(Tag, self).__init__(*args, **kwargs)

    def __repr__(self):
        return '<Tag : %s>' %self.name